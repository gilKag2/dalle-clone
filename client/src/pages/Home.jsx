import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { Loader, Card, FormField } from '../components';
import Details from '../components/Details';

const PARAGRAPH_TEXT = `Browse through a collection of imaginative and visually stunning images generated by DALL-E AI`;


const RenderCards = ({ data, errorMessage }) => {
  console.log(data);

  if (data?.length > 0)
    return data.map(post => <Card key={post._id} {...post} />);

  return (
    <h2 className='mt-5 font-bold text-[#6469ff] text-xl uppercase'>
      {errorMessage}
    </h2>
  );
};

const Home = () => {
  const [ loading, setLoading ] = useState(false);
  const [ allPosts, setAllPosts ] = useState(null);
  const [ searchText, setSearchText ] = useState('');
  const [ searchResults, setSearchResults ] = useState(null);
  const [ searchTimeout, setSearchTimeout ] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const { data: posts } = await axios.get('http://localhost:8080/api/v1/post');
        setAllPosts(posts.reverse());
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };

    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(setTimeout(() => {
      const searchResults = allPosts.filter(post =>
        post.name.toLowerCase().includes(searchText.toLowerCase()) ||
        post.prompt.toLowerCase().includes(searchText.toLowerCase()));
      setSearchResults(searchResults);
    }, 500));
  };

  return (
    <section className='max-w-7xl mx-auto'>
      <Details title="The Community Showcase" text={PARAGRAPH_TEXT} />
      <div className='mt-16'>
        <FormField
          labelName="Search Posts"
          type="text"
          name="text"
          placeholder="Search posts"
          value={searchText}
          handleChange={handleSearchChange}

        />
      </div>
      <div className='mt-10'>
        {loading ?
          (<div className='flex justify-center items-center'>
            <Loader />
          </div>)
          : (
            <>
              {searchText && (
                <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                  Showing Results For <span className='text-[#222328]'>{searchText}</span>
                </h2>
              )}
              <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
                {searchText ? (
                  <RenderCards data={searchResults} errorMessage="No Results Found" />
                ) : (
                  <RenderCards data={allPosts} errorMessage="No Posts Found" />
                )}
              </div>
            </>
          )
        }
      </div>
    </section>
  );
};

export default Home;